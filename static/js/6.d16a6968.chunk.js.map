{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/WithAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","warning","children","hasError","hasWarn","className","styles","formControl","TextArea","props","restProps","child","Input","createField","placeholder","name","component","validators","text","validate","requiredField","value","maxLength","max","length","undefined","maxLength30","maxLength50","DialogItem","path","id","s","dialog","active","to","Message","message","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","formData","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","userId","withAuthRedirect","WrappedComponent","RedirectComponent","this","React","Component","connect","compose"],"mappings":"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","file":"static/js/6.d16a6968.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3CTeF\",\"error\":\"FormsControls_error__1etjv\",\"formSummaryError\":\"FormsControls_formSummaryError__UPJB1\"};","import React from 'react';\r\nimport styles from './FormsControls.module.css'\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormControl = ({ input, meta: {touched, error, warning}, children }) => {\r\n    const hasError = touched && error;\r\n    const hasWarn = touched && warning;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error: \"\") + ' ' + (hasWarn ? styles.warning: \"\")}>\r\n            <div className=''>\r\n                {children}\r\n            </div>\r\n            <div className=''>\r\n                {\r\n                (hasError && <span>{error}</span>) ||\r\n                (hasWarn && <span>{warning}</span>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const TextArea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return (<FormControl {...props}><textarea {...input} {...restProps} /></FormControl>)\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return (<FormControl {...props}><input {...input} {...restProps} /></FormControl>)\r\n}\r\n\r\nexport const createField = (placeholder, name, component, validators, props={}, text=\"\") => { \r\n    return <div className=''><Field placeholder={placeholder} name={name} component={component} validate={validators} {...props}/>{text}</div>\r\n};\r\n","export const requiredField = value => {\r\n    if(value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\n\r\nconst maxLength = max => value => \r\n    value && value.length > max ? `Value must be no longer then ${max} symbols`: undefined;\r\n\r\nexport const maxLength30 = maxLength(30);\r\nexport const maxLength50 = maxLength(50);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__g0rTG\",\"dialogsItems\":\"Dialogs_dialogsItems__2-vHG\",\"active\":\"Dialogs_active__2aXqD\",\"messages\":\"Dialogs_messages__1LrYD\",\"message\":\"Dialogs_message__N0Mua\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { TextArea } from '../common/FormsControls/FormsControls';\r\nimport { requiredField, maxLength50 } from '../../utils/validators/validators';\r\n\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}> {/* + к этому контейнерная компонента  вызывает props.onSubmit*/}\r\n            <div className=''>\r\n                <Field placeholder={'Enter your message'} name={\"newMessageBody\"} component={TextArea} validate={[requiredField, maxLength50]} />\r\n            </div>\r\n            <div className=''>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}   \r\n// a unique name for the form\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    const addNewMessage = (formData) => {\r\n        props.sendMessage(formData.newMessageBody);\r\n    }\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n\r\n    // let newMessageBody = state.newMessageBody;\r\n\r\n    // let onSendMessageClick = () => {\r\n    //     props.sendMessage();\r\n    // }\r\n\r\n    // let onNewMessageChange = (e) => {\r\n    //     let body = e.target.value;\r\n    //     props.updateNewMessageBody(body);\r\n    // }\r\n\r\n    // if (!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n//     <div>\r\n//     <div><textarea value={newMessageBody}\r\n//                    onChange={onNewMessageChange}\r\n//                    placeholder='Enter your message'></textarea></div>\r\n//     <div><button onClick={onSendMessageClick}>Send</button></div>\r\n// </div> \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    userId: state.auth.userId\r\n});\r\n\r\nconst withAuthRedirect = (WrappedComponent) =>  {\r\n\r\n    class RedirectComponent extends React.Component{\r\n        // constructor(props){\r\n        //     super(props);\r\n        // }\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <WrappedComponent {...this.props} />\r\n        }\r\n    }\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}\r\n\r\nexport default withAuthRedirect;\r\n\r\n// export default connect(mapStateToPropsForRedirect)(withAuthRedirect);","// import React from 'react';\r\nimport {sendMessage} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport withAuthRedirect from '../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport withSupspend from \"../../hoc/WithSuspend\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         sendMessage: () => {\r\n//             dispatch(sendMessageCreator());\r\n//         },\r\n//         updateNewMessageBody: (body) => {\r\n//             dispatch(updateNewMessageBodyCreator(body));\r\n//         }\r\n//     }\r\n// }\r\n\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\n// export default withAuthRedirect(DialogsContainer);\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {sendMessage},\r\n    )\r\n)(Dialogs);"],"sourceRoot":""}