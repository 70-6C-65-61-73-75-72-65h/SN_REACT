{"version":3,"sources":["components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","index.js","redux/auth-reducer.js","hoc/WithSuspend.jsx","components/Header/Header.module.css","components/common/Preloader/Preloader.js","redux/profile-reducer.js","redux/dialogs-reducer.js","api/api.js","utils/validators/object-helpers.js","redux/users-reducer.js","assets/images/preloader.svg"],"names":["module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","Header","props","header","src","loginBlock","isAuth","login","onClick","logout","HeaderContainer","this","React","Component","connect","state","auth","initialState","initialized","appReducer","action","type","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","usersPage","usersReducer","authReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","DialogsContainer","withSupspend","lazy","UsersContainer","ProfileContainer","LoginPage","App","initializeApp","path","render","Preloader","AppContainer","withRouter","dispatch","Promise","all","getAuthUserData","then","resolve","SocialApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","SET_USER_DATA","userId","email","setAuthUserData","payload","a","authAPI","me","response","data","resultCode","id","password","rememberMe","message","messages","length","stopSubmit","_error","WrappedComponent","FallbackComponent","fallback","style","backgroundColor","preloader","posts","likesCount","profile","status","addPost","newPostText","setStatus","getStatus","profileAPI","updateStatus","getUserProfile","usersAPI","getProfile","newPost","filter","p","postId","dialogs","name","sendMessage","newMessageBody","body","instance","axios","withCredentials","baseURL","headers","getUsers","currentPage","pageSize","get","follow","post","unfollow","delete","console","warn","put","updateObjectInArray","itmes","itemId","objPropName","newObjProps","map","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","page","items","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","followed"],"mappings":"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","file":"static/js/main.ea2eb748.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__23sHf\",\"item\":\"Navbar_item__2SAa1\",\"activeLink\":\"Navbar_activeLink__39Wzx\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth ? <div className=''>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    // componentDidMount() {\r\n    //   this.props.getAuthUserData();\r\n    // }\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    login: state.auth.login,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","// import {authAPI} from \"../api/api\";\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS })\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    Promise.all([dispatch(getAuthUserData())])\r\n    .then( resolve => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n    \r\n    // authAPI.me()\r\n    //     .then(response => {\r\n    //         if (response.data.resultCode === 0) {\r\n    //             let {id, login, email} = response.data.data;\r\n    //             dispatch(initializedSuccess());\r\n    //         }\r\n    //     });\r\n}\r\n\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore, compose} from \"redux\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.__store__ = store;\r\n\r\n\r\nexport default store;","import React, { Suspense, lazy } from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {Route, withRouter, BrowserRouter, HashRouter} from \"react-router-dom\";\r\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\n// import UsersContainer from \"./components/Users/UsersContainer\";\r\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\n// import LoginPage from \"./components/Login/Login\";\r\nimport { connect, Provider } from 'react-redux';\r\nimport { initializeApp } from './redux/app-reducer';\r\nimport { compose } from 'redux';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport store from './redux/redux-store';\r\nimport withSupspend from './hoc/WithSuspend';\r\n\r\nconst DialogsContainer = withSupspend(lazy(() => import('./components/Dialogs/DialogsContainer'))); // Ленивая загрузка\r\nconst UsersContainer = withSupspend(lazy(() => import('./components/Users/UsersContainer'))); // Ленивая загрузка\r\nconst ProfileContainer = withSupspend(lazy(() => import('./components/Profile/ProfileContainer'))); // Ленивая загрузка\r\nconst LoginPage = withSupspend(lazy(() => import('./components/Login/Login'))); // Ленивая загрузка\r\n\r\nclass App extends React.Component {\r\n       componentDidMount() {\r\n              this.props.initializeApp();\r\n            }\r\n       render () {\r\n              if( !this.props.initialized ) return (<Preloader/>)\r\n              return (\r\n                     <div className='app-wrapper'>\r\n                         <HeaderContainer />\r\n                         <Navbar />\r\n                         <div className='app-wrapper-content'>\r\n                             <Route path='/dialogs'\r\n                                    render={ () => <DialogsContainer/> }/>\r\n         \r\n                             <Route path='/profile/:userId?'\r\n                                    render={ () => <ProfileContainer />}/>\r\n         \r\n                             <Route path='/users'\r\n                                    render={ () => <UsersContainer /> }/>\r\n         \r\n                             <Route path='/login'\r\n                                    render={ () => <LoginPage /> }/>\r\n         \r\n         \r\n                         </div>\r\n                     </div>\r\n                 )\r\n       }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n       initialized: state.app.initialized\r\n   });\r\n\r\n\r\nconst AppContainer = compose(\r\n       withRouter,\r\n       connect(mapStateToProps, {initializeApp})\r\n)(App);\r\n\r\nconst SocialApp = (props) => {\r\n       return <HashRouter>\r\n       <Provider store={store}>\r\n           <AppContainer/>\r\n       </Provider>\r\n   </HashRouter>\r\n}\r\nexport default SocialApp;","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SocialApp from './App';\r\n\r\n\r\nReactDOM.render(\r\n    <SocialApp/>, document.getElementById('root'));\r\n\r\n\r\n// API\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {authAPI} from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}  })\r\nexport const getAuthUserData = () => async(dispatch) => {\r\n    let response =  await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    return response;\r\n}\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async(dispatch) => {\r\n    let response =  await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length  ? response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async(dispatch) => {\r\n    let response =  await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React, {Component, Suspense} from 'react';\r\n// import Preloader from '../components/common/Preloader/Preloader';\r\n\r\nconst withSupspend = (WrappedComponent, FallbackComponent = <div className=''>Loading ...</div>) => {\r\n    return class extends Component {\r\n        render(){\r\n            return <Suspense fallback={FallbackComponent}>\r\n                    <WrappedComponent {...this.props}/>\r\n                    </Suspense>\r\n        }\r\n    }\r\n}\r\n\r\nexport default withSupspend;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3R65g\",\"loginBlock\":\"Header_loginBlock__3BNpb\"};","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div  style={ { backgroundColor: 'white' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import {usersAPI, profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    // newPostText: 'it-kamasutra.com',\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                // newPostText: ''\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\nexport const getStatus = (userId) => async(dispatch) => {\r\n    let response =  await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async(dispatch) => {\r\n    let response =  await profileAPI.updateStatus(status);\r\n    if( response.data.resultCode === 0 ){\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (userId) => async(dispatch) => {\r\n    let response =  await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessage = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","import * as axios from \"axios\";\r\n\r\n// создание 2/3-го параметра ( для кук, withCredentials: true - разрешаем исопльзывать ssl-сертификаты и куки, сохраняем )\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:     { // без него сервак нас не пустит к себе\r\n        \"API-KEY\": \"0910d8ba-06c9-4149-873b-82259c2ebe01\"\r\n        // \"API-KEY\": \"b1775b2f-c3a5-4509-8dc9-90b5629de7c3\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object')\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = { \r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    }\r\n\r\n}\r\n\r\n// sessions auth ( so delete - post methods for it )\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe=false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\n\r\n\r\n","export const updateObjectInArray = (itmes, itemId, objPropName, newObjProps) => {\r\n    return itmes.map( item =>  {\r\n        if (item[objPropName] === itemId) {\r\n            return {...item, ...newObjProps}\r\n        }\r\n        return item;\r\n    })  \r\n}","import {usersAPI} from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/validators/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            // console.log(`followingInProgress: ${state.followingInProgress}`);\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async(dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data =  await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async(dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response =  await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.6e7c9db7.svg\";"],"sourceRoot":""}