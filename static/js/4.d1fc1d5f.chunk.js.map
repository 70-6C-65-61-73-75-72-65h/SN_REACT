{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","warning","children","hasError","hasWarn","className","styles","formControl","TextArea","props","restProps","child","Input","createField","placeholder","name","component","validators","text","validate","requiredField","value","maxLength","max","length","undefined","maxLength30","maxLength50","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","profile","s","descriptionBlock","src","photos","large","alt","Preloader","Post","item","message","likesCount","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","MyPosts","postsElements","posts","map","p","postsBlock","formData","addPost","newPostText","MyPostsContainer","connect","state","profilePage","Profile","ProfileContainer","userId","this","match","params","history","getUserProfile","getStatus","React","Component","compose","isAuth","auth","withRouter"],"mappings":"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","file":"static/js/4.d1fc1d5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3hX7Q\",\"error\":\"FormsControls_error__NpsHe\",\"formSummaryError\":\"FormsControls_formSummaryError__3WkxM\"};","import React from 'react';\r\nimport styles from './FormsControls.module.css'\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormControl = ({ input, meta: {touched, error, warning}, children }) => {\r\n    const hasError = touched && error;\r\n    const hasWarn = touched && warning;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error: \"\") + ' ' + (hasWarn ? styles.warning: \"\")}>\r\n            <div className=''>\r\n                {children}\r\n            </div>\r\n            <div className=''>\r\n                {\r\n                (hasError && <span>{error}</span>) ||\r\n                (hasWarn && <span>{warning}</span>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const TextArea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return (<FormControl {...props}><textarea {...input} {...restProps} /></FormControl>)\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return (<FormControl {...props}><input {...input} {...restProps} /></FormControl>)\r\n}\r\n\r\nexport const createField = (placeholder, name, component, validators, props={}, text=\"\") => { \r\n    return <div className=''><Field placeholder={placeholder} name={name} component={component} validate={validators} {...props}/>{text}</div>\r\n};\r\n","export const requiredField = value => {\r\n    if(value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\n\r\nconst maxLength = max => value => \r\n    value && value.length > max ? `Value must be no longer then ${max} symbols`: undefined;\r\n\r\nexport const maxLength30 = maxLength(30);\r\nexport const maxLength50 = maxLength(50);","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__J0xOK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1T9Te\",\"posts\":\"MyPosts_posts__2Ldus\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1EtAq\"};","import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\r\n                       value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    \r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            {/* <div>\r\n                <img\r\n                    src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'/>\r\n            </div> */}\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} alt='ProfilePhoto'/>\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus = {updateStatus}/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { requiredField, maxLength30 } from '../../../utils/validators/validators';\r\nimport { TextArea } from '../../common/FormsControls/FormsControls';\r\n\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}> {/* + к этому контейнерная компонента  вызывает props.onSubmit*/}\r\n            <div className=''>\r\n                <Field placeholder={'Write your post'} name={\"newPostText\"} component={TextArea} validate={[requiredField, maxLength30]}/>\r\n            </div>\r\n            <div className=''>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n// a unique name for the form\r\nconst AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm)\r\n\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    const onAddPost = (formData) => {\r\n        // console.log(formData);\r\n        props.addPost(formData.newPostText);\r\n    }\r\n\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} />);\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;\r\n\r\n\r\n\r\n//     // let newPostElement = React.createRef();\r\n\r\n//     // let onAddPost = () => {\r\n//     //     props.addPost();\r\n//     // }\r\n\r\n//     // let onPostChange = (e) => {\r\n//     //     // let text = newPostElement.current.value;\r\n//     //     // props.updateNewPostText(text);\r\n//     //     let text = e.target.value;\r\n//     //     props.updateNewPostText(text);\r\n//     // }\r\n\r\n// <div>\r\n//     <div>\r\n//         <textarea onChange={onPostChange}\r\n//             value={props.newPostText} />\r\n//     </div>\r\n//     <div>\r\n//         <button onClick={onAddPost}>Add post</button>\r\n//     </div>\r\n// </div> ","import {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         updateNewPostText: (text) => {\r\n//             let action = updateNewPostTextActionCreator(text);\r\n//             dispatch(action);\r\n//         },\r\n//         addPost: () => {\r\n//             dispatch(addPostActionCreator());\r\n//         }\r\n//     }\r\n// }\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus = {props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, updateStatus, getStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\n// import WithAuthRedirect from '../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId; // 8705 //this.props.userId; // getting from withAuthRedirect\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        // console.log(`${userId}`);\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n            updateStatus = {this.props.updateStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    isAuth: state.auth.isAuth,\r\n    userId: state.auth.userId\r\n});\r\n\r\nexport default compose(\r\n    // WithAuthRedirect,\r\n    connect(mapStateToProps, {getUserProfile, updateStatus, getStatus}),\r\n    withRouter\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}