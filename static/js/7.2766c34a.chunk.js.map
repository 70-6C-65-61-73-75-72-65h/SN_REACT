{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js","components/Login/Login.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","warning","children","hasError","hasWarn","className","styles","formControl","TextArea","props","restProps","child","Input","createField","placeholder","name","component","validators","text","validate","requiredField","value","maxLength","max","length","undefined","maxLength30","maxLength50","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","type","formSummaryError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,+LCGrHC,EAAc,SAAC,GAAyD,EAAvDC,MAAwD,IAAD,IAAhDC,KAAOC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAAUC,EAAe,EAAfA,SACrDC,EAAWJ,GAAWC,EACtBI,EAAUL,GAAWE,EAC3B,OACI,yBAAKI,UAAWC,IAAOC,YAAc,KAAOJ,EAAWG,IAAON,MAAO,IAAM,KAAOI,EAAUE,IAAOL,QAAS,KACxG,yBAAKI,UAAU,IACVH,GAEL,yBAAKG,UAAU,IAEVF,GAAY,8BAAOH,IACnBI,GAAW,8BAAOH,MAQtBO,EAAW,SAACC,GAAW,IACxBZ,EAAqCY,EAArCZ,MAAuBa,GAAcD,EAA9BX,KAA8BW,EAAxBE,MADU,YACcF,EADd,2BAE/B,OAAQ,kBAACb,EAAgBa,EAAO,8CAAcZ,EAAWa,MAGhDE,EAAQ,SAACH,GAAW,IACrBZ,EAAqCY,EAArCZ,MAAuBa,GAAcD,EAA9BX,KAA8BW,EAAxBE,MADO,YACiBF,EADjB,2BAE5B,OAAQ,kBAACb,EAAgBa,EAAO,2CAAWZ,EAAWa,MAG7CG,EAAc,SAACC,EAAaC,EAAMC,EAAWC,GAAmC,IAAvBR,EAAsB,uDAAhB,GAAIS,EAAY,uDAAP,GACjF,OAAO,yBAAKb,UAAU,IAAG,kBAAC,IAAD,eAAOS,YAAaA,EAAaC,KAAMA,EAAMC,UAAWA,EAAWG,SAAUF,GAAgBR,IAASS,K,iCClCnI,sGAAO,IAAME,EAAgB,SAAAC,GACzB,IAAGA,EACH,MAAO,qBAILC,EAAY,SAAAC,GAAG,OAAI,SAAAF,GAAK,OAC1BA,GAASA,EAAMG,OAASD,EAAxB,uCAA8DA,EAA9D,iBAA6EE,IAEpEC,EAAcJ,EAAU,IACxBK,EAAcL,EAAU,K,iCCVrC,+FA6BMM,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EAnBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAc/B,EAAW,EAAXA,MAC9B,OACQ,0BAAMgC,SAAUD,GAAhB,IACKlB,YAAY,QAAS,QAASD,IAAO,CAACQ,MACtCP,YAAY,WAAY,WAAYD,IAAO,CAACQ,KAAgB,CAACa,KAAM,aACnEpB,YAAY,KAAM,aAAcD,IAAO,KAAM,CAACqB,KAAM,YAAa,eAElEjC,GACA,yBAAKK,UAAWC,IAAO4B,kBAClBlC,GAGL,yBAAKK,UAAU,IACX,8CAmCL8B,uBALS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAIiB,CAACE,WAA1BJ,EA3BD,SAAC1B,GASX,OAAGA,EAAM4B,OAAgB,kBAAC,IAAD,CAAUG,GAAG,aAGlC,oCACI,yBAAKnC,UAAU,IACX,qCACA,kBAACuB,EAAD,CAAgBI,SAbX,SAACS,GACdhC,EAAM8B,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.2766c34a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3CTeF\",\"error\":\"FormsControls_error__1etjv\",\"formSummaryError\":\"FormsControls_formSummaryError__UPJB1\"};","import React from 'react';\r\nimport styles from './FormsControls.module.css'\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormControl = ({ input, meta: {touched, error, warning}, children }) => {\r\n    const hasError = touched && error;\r\n    const hasWarn = touched && warning;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error: \"\") + ' ' + (hasWarn ? styles.warning: \"\")}>\r\n            <div className=''>\r\n                {children}\r\n            </div>\r\n            <div className=''>\r\n                {\r\n                (hasError && <span>{error}</span>) ||\r\n                (hasWarn && <span>{warning}</span>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const TextArea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return (<FormControl {...props}><textarea {...input} {...restProps} /></FormControl>)\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return (<FormControl {...props}><input {...input} {...restProps} /></FormControl>)\r\n}\r\n\r\nexport const createField = (placeholder, name, component, validators, props={}, text=\"\") => { \r\n    return <div className=''><Field placeholder={placeholder} name={name} component={component} validate={validators} {...props}/>{text}</div>\r\n};\r\n","export const requiredField = value => {\r\n    if(value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\n\r\nconst maxLength = max => value => \r\n    value && value.length > max ? `Value must be no longer then ${max} symbols`: undefined;\r\n\r\nexport const maxLength30 = maxLength(30);\r\nexport const maxLength50 = maxLength(50);","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Input, createField } from '../common/FormsControls/FormsControls';\r\nimport { requiredField, maxLength30 } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport styles from '../common/FormsControls/FormsControls.module.css'\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n            <form onSubmit={handleSubmit}> {/* + к этому контейнерная компонента  вызывает props.onSubmit*/}\r\n                {createField('Email', \"email\", Input, [requiredField])}\r\n                {createField('Password', \"password\", Input, [requiredField], {type: \"password\"})}\r\n                {createField(null, \"rememberMe\", Input, null, {type: \"checkbox\"}, \"remember me\")}\r\n                {\r\n                error && \r\n                <div className={styles.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n                }\r\n                <div className=''>\r\n                    <button>Login</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n // a unique name for the form\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n        // console.log(`${formData}`);\r\n\r\n        // здесь можем их задиспатчить в санку ( типо тут схватили и разширили уже зохочений из редакс-форм )\r\n    }\r\n\r\n    if(props.isAuth) return (<Redirect to='/profile'/>)\r\n\r\n    return (\r\n        <>\r\n            <div className=''>\r\n                <h1>LOGIN</h1>\r\n                <LoginReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}